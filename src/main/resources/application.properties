spring.application.name=kosa-final-project-backend

server.port=9000
server.servlet.encoding.charset=utf-8

# DB 연결(MySQL)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/kosa?&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=1234

# DB 연결(H2 DB)
#spring.datasource.url=jdbc:h2:file:./final-projectdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

# jwt key
spring.jwt.secret=SahL5G83mGzrulJzffw-eD7RqphsXluJPBwxu0ncBFo

# Redis ??
spring.data.redis.host=redis
spring.data.redis.port=6379
# spring.data.redis.password=
# spring.data.redis.database=0

serverTimezone=UTC&characterEncoding=UTF-8
spring.jpa.database=mysql

spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# Springdoc OpenAPI (Swagger) 설정
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.tags-sorter=alpha

## RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username: admin
#spring.rabbitmq.password: admin123
#spring.rabbitmq.listener.simple.retry.enabled=true
#spring.rabbitmq.listener.simple.retry.max-attempts: 3
#spring.rabbitmq.listener.simple.default-requeue-rejected: false

# gemini API
gemini.api.key=AIzaSyAvtjF3szEjkBBgYCTydccS3XVwrpFJfq4

tosspayments.secretKey=test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6
# ?? ?? ??
file.upload.dir=/data/uploads/images
file.upload.max-size=10MB
file.upload.allowed-extensions=jpg,jpeg,png,gif,webp

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Google Cloud Storage 버킷 설정
# GCS 버킷 이름
app.gcs.bucket=${APP_GCS_BUCKET:kosa-final-backend-bucket}
# 버킷 내 저장 디렉토리(폴더)
app.gcs.base-dir=${APP_GCS_BASE_DIR:uploads/images}
# 업로드 후 객체를 공개 읽기 가능하게 할지 여부
app.gcs.public-read=true
# 서명 URL 만료(초). public-read=false일 때 사용
app.gcs.signed-url-exp-seconds=86400

spring.servlet.multipart.file-size-threshold=20MB